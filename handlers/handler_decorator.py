from loader import bot
from telebot.types import Message, ReplyKeyboardRemove
from handlers import error_handler
from loguru import logger
from utils.misc import clear_uploads


def command_handler(state_required=None):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è."""

    def decorator(func):
        def wrapper(message: Message):
            try:
                # if state_required and bot.get_state(message.from_user.id) != str(state_required):
                #     bot.reply_to(message, "ü§ñ –û–∂–∏–¥–∞–ª –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É.\n")
                #     return
                if message.text == '/start':
                    clear_uploads.main(message.from_user.id)
                    bot.set_state(message.from_user.id, None, message.chat.id)
                    bot.send_message(message.chat.id,
                                     f"ü§ñ –ó–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É, —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start", reply_markup=ReplyKeyboardRemove())
                    logger.info(f'{message.from_user.id}: state=None')
                    return
                result = func(message)
                return result
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ {func.__name__}: {e}")
                error_handler.main(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞")

        return wrapper

    return decorator

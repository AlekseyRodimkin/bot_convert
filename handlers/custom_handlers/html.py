import os
from loader import bot
from telebot.types import Message
from utils.misc.algorithms import get_html, is_valid_url
from handlers import error_handler
from config_data.config import uploads_path
from loguru import logger
from handlers.handler_decorator import command_handler
from states.states import UserState


@bot.message_handler(commands=["HTML"])
@command_handler()
def html_main(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã HTML. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏.
    """
    logger.info(f'{message.from_user.id}: /HTML')
    bot.send_message(
        message.from_user.id,
        "ü§ñ–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è HTML-–∫–æ–¥–∞.\n\n"
        "‚ùó‚ùó‚ùóÔ∏è–ü–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–≥–æ –∫–æ–¥–∞."
    )
    bot.set_state(message.from_user.id, UserState.waiting_link, message.chat.id)


@bot.message_handler(state=UserState.waiting_link)
@command_handler(state_required=UserState.waiting_link)
def html_get(message: Message) -> None:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ HTML-–∫–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    if not is_valid_url(message.text):
        bot.reply_to(message, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞")
        return

    logger.info(f'{message.from_user.id}: –ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ - {message.text}')
    url = message.text.strip()
    html_content = get_html(url)
    if not html_content:
        error_handler.main(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å HTML-–∫–æ–¥. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É.")
        return

    user_path = os.path.join(uploads_path, str(message.from_user.id))
    os.makedirs(user_path, exist_ok=True)
    file_path = os.path.join(user_path, "page.html")

    try:
        with open(file_path, "w", encoding="utf-8") as html_file:
            html_file.write(html_content)

        with open(file_path, 'rb') as file:
            bot.send_document(message.chat.id, file)
            logger.info(f'{message.from_user.id}: HTML-—Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.')
    except IOError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ HTML –≤ —Ñ–∞–π–ª: {e}")
        error_handler.main(message, "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è HTML-–∫–æ–¥–∞.")

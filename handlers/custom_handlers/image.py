from loader import bot
from states.states import UserState
from telebot.types import Message
from Exeptions.exeptions_classes import FileFormatError
import os
from handlers.custom_handlers.algorithms import get_monochrome, get_noise, remove_background, format_replace
from handlers.custom_handlers.errors import clearing_uploads, handle_error

uploads_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../uploads'))


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
def send_image_options(user_id: int):
    bot.send_message(user_id, "ü§ñ–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:\n"
                              "\n/format - –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è jpg –≤ png –∏ –æ–±—Ä–∞—Ç–Ω–æüîÑ\n"
                              "\n/back - —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—èüîµ\n"
                              "\n/noisy - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —à—É–º–∞üî£\n"
                              "\n/monochrome - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —á–µ—Ä–Ω–æ-–±–µ–ª—É—é –ø–∞–ª–∏—Ç—Ä—Éüî≥")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
def send_file(chat_id: int, file_path: str):
    with open(file_path, 'rb') as file:
        bot.send_document(chat_id, file)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
def process_image_command(command, save_path, new_file_path, message):
    if command == "monochrome" and get_monochrome(save_path, new_file_path):
        send_file(message.chat.id, new_file_path)
    elif command == "noisy" and get_noise(save_path, new_file_path):
        send_file(message.chat.id, new_file_path)
    elif command == "back" and remove_background(save_path, new_file_path):
        send_file(message.chat.id, new_file_path)
    elif command == "format":
        result = format_replace(save_path)
        if result:
            result_format = result.split('.')[-1]
            user_format = "jpg" if result_format == 'png' else "png"
            bot.send_message(message.from_user.id, f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: {user_format}\n"
                                                   f"–ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: {result_format}")
            send_file(message.chat.id, result)
        else:
            handle_error(message, "–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    else:
        handle_error(message, "–ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ IMAGE
@bot.message_handler(commands=["IMAGE"])
def image(message: Message) -> None:
    send_image_options(message.from_user.id)
    bot.set_state(message.from_user.id, UserState.waiting_action_image, message.chat.id)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è
@bot.message_handler(state=UserState.waiting_action_image)
def waiting_action_image(message: Message) -> None:
    if message.text == '/start':
        bot.delete_state(message.from_user.id)
        bot.send_message(message.from_user.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
        return

    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data["command"] = message.text[1:]

    bot.send_message(message.from_user.id, f"ü§ñ–ü—Ä–∏—à–ª–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
    bot.set_state(message.from_user.id, UserState.waiting_image, message.chat.id)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
@bot.message_handler(content_types=['photo'], state=UserState.waiting_image)
def waiting_image(message: Message) -> None:
    file_id = message.photo[-1].file_id
    file_info = bot.get_file(file_id)
    file_name = file_info.file_path.split('/')[1]
    save_path = os.path.join(uploads_path, file_name)

    try:
        downloaded_file = bot.download_file(file_info.file_path)
        with open(save_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        bot.reply_to(message, "ü§ñ–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é...")

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            command = data.get("command")
            new_file_path = os.path.join(uploads_path, f"{command}_{file_name}")
            process_image_command(command, save_path, new_file_path, message)

    except FileFormatError:
        handle_error(message, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ")
    finally:
        bot.set_state(message.from_user.id, None, message.chat.id)
        clearing_uploads()

from loader import bot
from telebot.types import Message
from utils.misc import clear_uploads
from utils.misc.algorithms import is_valid_url
from utils.misc import youtube
from loguru import logger
from handlers.handler_decorator import command_handler
from states.states import UserState
import os
import subprocess
from config_data.config import uploads_path
from .. import error_handler


def send_video_options(user_id: int):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥."""
    options_message = (
        "ü§ñ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è —Ñ–∞–π–ª–∞:\n"
        "\n/yandex - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞ –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫ –∏ –ø—Ä–∏—Å–ª–∞—Ç—å —Å—Å—ã–ª–∫—É\n"
    )
    bot.send_message(user_id, options_message)


@bot.message_handler(commands=["YTB"])
@command_handler()
def main_youtube(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã YTB."""
    logger.info(f'{message.from_user.id}: /YTB')
    send_video_options(message.from_user.id)
    bot.set_state(message.from_user.id, UserState.waiting_resolution, message.chat.id)


@bot.message_handler(state=UserState.waiting_resolution)
@command_handler(state_required=UserState.waiting_resolution)
def res_youtube(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∏–¥–µ–æ."""
    if message.text not in ("/yandex"):
        send_video_options(message.from_user.id)
        return

    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data["target_place"] = message.text[1:]
    logger.info(f'{message.from_user.id}: get_link({message.text})')

    bot.send_message(message.from_user.id, f"ü§ñ–ü—Ä–∏—à–ª–∏—Ç–µ —Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ youtube")
    bot.set_state(message.from_user.id, UserState.waiting_video_link, message.chat.id)


@bot.message_handler(state=UserState.waiting_video_link)
@command_handler(state_required=UserState.waiting_video_link)
def get_video(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Å—ã–ª–∫–∏ """
    if not is_valid_url(message.text):
        bot.reply_to(message, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞")
        return

    logger.info(f'{message.from_user.id}: get_video({message.text})')
    bot.send_message(message.from_user.id, f"ü§ñ–ù–∞—á–∏–Ω–∞—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ, –ø—Ä–∏—à–ª—é –∫–∞–∫ –∑–∞–∫–æ–Ω—á—É...")
    try:
        path = os.path.join(uploads_path, str(message.from_user.id))

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            result = youtube.main(
                user_upl_path=path,
                link=message.text
            )
            bot.send_message(message.from_user.id, f"ü§ñ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª –≤ –Ø–Ω–¥–µ–∫—Å –¥–∏—Å–∫–µ\n{result}")

    except Exception as e:
        error_handler.main(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ", e)
    finally:
        bot.set_state(message.from_user.id, None, message.chat.id)
        clear_uploads.main(message.from_user.id)

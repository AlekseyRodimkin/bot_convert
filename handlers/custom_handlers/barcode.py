from loader import bot
from states.states import UserState
from telebot.types import Message
import os
from utils.misc.algorithms import get_barcode
from utils.misc import clear_uploads, error_handler
from config_data.config import uploads_path
from loguru import logger


@bot.message_handler(commands=["BARCODE"])
def main(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã BARCODE.
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–û–∂–∏–¥–∞–Ω–∏–µ —Ü–∏—Ñ—Ä".
    :param message: –ü–æ–ª—É—á–µ–Ω–Ω–æ–µ –≤ —á–∞—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–æ–º–∞–Ω–¥–∞)
    """
    logger.info(f'{message.from_user.id}: /BARCODE')

    bot.send_message(message.from_user.id, "ü§ñ–í–≤–µ–¥–∏—Ç–µ 1Ô∏è‚É£2Ô∏è‚É£ —Ü–∏—Ñ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞")
    bot.set_state(message.from_user.id, UserState.waiting_numbers, message.chat.id)


@bot.message_handler(state=UserState.waiting_numbers)
def waiting_numbers(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ü–µ–ª–µ–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
    :param message: –ü–æ–ª—É—á–µ–Ω–Ω–æ–µ –≤ —á–∞—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    logger.info(f'{message.from_user.id}: waiting_numbers({message.text})')

    if not message.text.isdigit() or len(message.text) != 12:
        error_handler.main(message, "–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —à—Ç—Ä–∏—Ö-–∫–æ–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ 1Ô∏è‚É£2Ô∏è‚É£ —Ü–∏—Ñ—Ä")
        return

    barcode_path = os.path.join(f'{uploads_path}/{message.from_user.id}', 'barcode')
    if get_barcode(message.text, barcode_path):
        bot.send_document(message.chat.id, open(f'{barcode_path}.png', 'rb'))
        logger.info(f'send_document: {message.from_user.id}: barcode.png')
        bot.set_state(message.from_user.id, None, message.chat.id)
        clear_uploads.main(message.from_user.id)
    else:
        error_handler.main(message, "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
